image: alpine

stages:
  - test
  - build
  - deploy
  
cache:
  paths:
    - target/

cargo-test:
  stage: test
  image: rust:latest
  before_script:
    - apt-get update -yqq
    - apt-get install -yqq --no-install-recommends build-essential libsqlite3-dev libpq-dev default-libmysqlclient-dev
    - rustup component add clippy
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo check
    - cargo clippy
    - cargo test --all --verbose

docker-master:
  image: docker:latest
  stage: build
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

docker-develop:
  image: docker:latest
  stage: build
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "${CI_REGISTRY_IMAGE}:develop" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  only:
    - develop

deploy-master:
  image: appropriate/curl
  stage: deploy
  script:
    - curl http://[215:c420:ccfe:37d1:ed42:c4ee:2669:1a8a]:9000/hooks/redeploy-webhook
  only:
    - master

deploy-develop:
  image: appropriate/curl
  stage: deploy
  script:
    - curl http://[215:ff81:c80b:a859:67dd:ab09:26bb:eb30]:9000/hooks/redeploy-webhook
  only:
    - develop
